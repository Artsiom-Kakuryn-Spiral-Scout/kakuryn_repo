name: Deploy web-server to Amazon ECS

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      image:
        type: string
        required: true


permissions:
  id-token: write
  contents: read

#TODO replace env values with GitHub Secrets

env:
  AWS_REGION: us-east-1 #${{ secrets.AWS_REGION }}
  ECR_REGISTRY: 1234.dkr.ecr.us-east-1.amazonaws.com #${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: neo-dev-frontend #${{ secrets.ECR_REPOSITORY }}

  ECS_SERVICE: NEO-DEV-FRONTEND-SERVICE                 # set this to your Amazon ECS service name
  ECS_CLUSTER: ${{inputs.environment}}                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: deploy
        run: |
          echo ${{inputs.environment}}
          echo ${{inputs.image}}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true